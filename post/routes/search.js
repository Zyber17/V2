// Generated by CoffeeScript 1.6.3
(function() {
  var db, es, moment, photo_bucket_name, photo_bucket_url, searchGet, searchView, string;

  db = require('../db');

  es = require('../es');

  moment = require('moment');

  string = require('string');

  photo_bucket_name = process.env.NODE_ENV === 'dev' ? 'torch_test' : "torch_photos";

  photo_bucket_url = "http://s3.amazonaws.com/" + photo_bucket_name + "/";

  exports.searchDirector = function(req, res, next) {
    if (req.query.q != null) {
      return searchGet(req, res, next);
    } else {
      return searchView(req, res, next);
    }
  };

  searchView = function(req, res, next) {
    return res.render('search');
  };

  searchGet = function(req, res, next) {
    var query;
    query = decodeURIComponent(req.query.q).replace(/[^\w\s]/g, '');
    return es.search({
      index: 'torch',
      type: 'article',
      q: query
    }, function(err, resp) {
      var article, articles, i, _i, _len, _ref;
      if (!err) {
        if (resp && resp.hits.hits.length) {
          articles = [];
          _ref = resp.hits.hits;
          for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            article = _ref[i];
            articles[i] = {
              body: article._source.truncated,
              author: article._source.author,
              title: string(article._source.title).truncate(75).s,
              date: {
                human: moment(article._source.date).format("MMM D, YYYY"),
                robot: moment(article._source.date).toISOString().split('T')[0]
              },
              slug: "/articles/" + article._source.slug + "/",
              photo: article._source.photo ? "" + photo_bucket_url + article._id + "/" + article._source.photo : void 0,
              isPublished: 2
            };
          }
          return res.render('articleList', {
            recentAr: articles,
            section: "Search: " + query,
            searchquery: "" + query
          });
        } else {
          return res.render('errors/404', {
            _err: ["No matching articles found"],
            searchquery: query
          });
        }
      } else {
        console.log("Error (search): " + err);
        return res.end(JSON.stringify(err));
      }
    });
  };

}).call(this);
